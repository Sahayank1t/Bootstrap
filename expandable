<div class="page-wrapper">
  <div id="profile-1" class="expandable-card">
    <div cardContent>
      <div collapsedContent>
        <div class="expandable-card--left-col col">
          <div class="expandable-card--profile-image">
            JD
          </div>
        </div>
        <div class="expandable-card--right-col col">
          <div class="expandable-card--title">
            Profile Information
          </div>
          <div class="expandable-card--sub-title">
            <p>Jane Doe</p>
            <p>03/03/1976</p>
            <p>St. Louis, MO</p>
          </div>
        </div>
      </div>
      <div expandedContent>
        <div class="mock-content"></div>
      </div>
    </div>
  </div>
  <div id="profile-2" class="expandable-card">
    <div cardContent>
      <div collapsedContent>
        <div class="expandable-card--left-col col">
          <div class="expandable-card--profile-image" style="background: cyan;">
            HG
          </div>
        </div>
        <div class="expandable-card--right-col col">
          <div class="expandable-card--title">
            Profile Information
          </div>
          <div class="expandable-card--sub-title" >
            <p>Henry Gregson</p>
            <p>10/11/1990</p>
            <p>Chicago, IL</p>
          </div>
        </div>
      </div>
      <div expandedContent>
        <div class="mock-content"></div>
      </div>
    </div>
  </div>
  <div id="profile-3" class="expandable-card">
    <div cardContent>
      <div collapsedContent>
        <div class="expandable-card--left-col col">
          <div class="expandable-card--profile-image" style="background: pink;">
            PF
          </div>
        </div>
        <div class="expandable-card--right-col col">
          <div class="expandable-card--title">
            Profile Information
          </div>
          <div class="expandable-card--sub-title">
            <p>Perry Ferento</p>
            <p>04/01/1988</p>
            <p>New York, NY</p>
          </div>
        </div>
      </div>
      <div expandedContent>
        <div class="mock-content"></div>
      </div>
    </div>
  </div>
  <div id="profile-4" class="expandable-card">
    <div cardContent>
      <div collapsedContent>
        <div class="expandable-card--left-col col">
          <div class="expandable-card--profile-image" style="background: gold;">
            JP
          </div>
        </div>
        <div class="expandable-card--right-col col">
          <div class="expandable-card--title">
            Profile Information
          </div>
          <div class="expandable-card--sub-title">
            <p>Juan Pedro</p>
            <p>04/01/1988</p>
            <p>San Francisco, CA</p>
          </div>
        </div>
      </div>
      <div expandedContent>
        <div class="mock-content"></div>
      </div>
    </div>
  </div>
</div>







$color-primary: #69f0ae;
$color-secondary: #18ffff;
$color-bg: #37474f;

* {
  font-size: 16px;
  font-family: "Oxygen", sans-serif;
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body,
html {
  background: $color-bg;
}

.page-wrapper {
  max-width: 860px;
  padding: 40px;
  margin: 0 auto;
}

.expandable-card {
  position:relative;
  margin-bottom: 16px;
}

[cardContent]{
  position: relative;
  background: white;
  border-radius: 8px;

  box-shadow: 0 2px 2px 1px rgba(0, 0, 0, 0.1);
  cursor: pointer;
  [collapsedContent] {
    display: flex;
    flex-direction: row;
    padding: 24px;
  }
  [expandedContent] {
    visibility:hidden;
    position:absolute;
    left: 0;
    right:0;
    bottom:0;
    opacity: 0;
    padding:24px;
    overflow:hidden;
  }
}

.expanding-card--backdrop {
  background: black;
  opacity: .50;
}

.expandable-card--title {
  font-size: 21px;
  font-weight: bold;
  line-height: 24px;
  margin-bottom: 8px;
}
.expandable-card--sub-title {
  font-size: 14px;
  color: #888888;
}

.expandable-card--profile-image {
  width: 64px;
  height: 64px;
  display: flex;
  align-items: center;
  justify-content: center;
  background: $color-primary;
  color: black;
  font-size: 21px;
  font-weight: bold;
  border-radius: 1000px;
}

.col:first-child {
  margin-right: 24px;
}


.expanding-card--placeholder {
  position:relative;
  height: 0;
  visibility:hidden;
}

.mock-content {
  .mock-content-line {
    background: #888888;
    height: 16px;
    margin-bottom: 8px;
    
  }
}


















const duration = 300;
const leaveDuration = 250;
class ExpandableCard {
  constructor(node) {
    this.backdropEl = document.createElement("DIV");
    this.backdropEl.className = "expanding-card--backdrop";
    this.backdropEl.addEventListener("click", () => {
      this.collapse();
    });
    this.hostEl = node;
    this.placeholderEl = document.createElement("DIV");
    this.placeholderEl.className = "expanding-card--placeholder";
    this.hostEl.appendChild(this.placeholderEl);
    this.cardContentEl = node.querySelector("[cardContent]");
    this.collapsedContentEl = node.querySelector("[collapsedContent]");
    this.expandedContentEl = node.querySelector("[expandedContent]");
    this.expanded = false;
    this.animatingFlag = false;

    this.hostEl.addEventListener("click", () => {
      this.expand();
    });
  }

  expand() {
    if (this.expanded || this.animating) {
      return;
    }
    this.animating = true;

    this.backdropEl.style.position = "fixed";
    this.backdropEl.style.top = "0px";
    this.backdropEl.style.left = "0px";
    this.backdropEl.style.right = "0px";
    this.backdropEl.style.bottom = "0px";
    this.backdropEl.style.opacity = "0";

    this.backdropEl.style.zIndex = 9;

    document.body.appendChild(this.backdropEl);

    const cardBoundingRect = this.cardContentEl.getBoundingClientRect();

    this.placeholderEl.style.height = `${cardBoundingRect.height}px`;
    this.cardContentEl.style.position = "fixed";
    this.cardContentEl.style.zIndex = 10;
    this.cardContentEl.style.top = `${0}px`;
    this.cardContentEl.style.left = `${0}px`;
    this.cardContentEl.style.width = null;
    this.cardContentEl.style.height = null;
    this.cardContentEl.style.transform = `translate(${
      cardBoundingRect.left
    }px), ${cardBoundingRect.top}px)`;
    this.expandedContentEl.style.visibility = "visible";

    const fromHeight = this.staticHeight(this.cardContentEl);
    const expandedContentHeight = this.staticHeight(this.expandedContentEl);
    const toHeight = fromHeight + expandedContentHeight;

    const targetBoundingRect = {
      left: 16,
      top: 16,
      width: window.innerWidth - 32,
      height: toHeight
    };
    const promises = [
      anime({
        targets: this.cardContentEl,
        height: [fromHeight, toHeight],
        translateX: [cardBoundingRect.left, targetBoundingRect.left],
        translateY: [cardBoundingRect.top, targetBoundingRect.top],
        width: [cardBoundingRect.width, targetBoundingRect.width],
        boxShadow:
          "0 0 1px 0 rgba(33,43,54,.08), 0 8px 10px 0 rgba(33,43,54,.2)",
        duration: duration,
        easing: 'easeOutCubic'
      }).finished,
      anime({
        targets: this.expandedContentEl,
        translateY: [16, 0],
        opacity: [0, 1],
        delay: 100,
        duration: duration,
        easing: 'easeOutCubic'
      }).finished,
      anime({
        targets: this.backdropEl,
        opacity: [0, 0.33],
        duration: duration,
        easing: 'easeOutCubic'
      })
    ];
    return Promise.all(promises).then(() => {
      this.animating = false;
      this.expanded = true;
    });
  }

  collapse() {
    if (!this.expanded || this.animating) {
      return;
    }
    this.animating = true;

    const placeholderRect = this.placeholderEl.getBoundingClientRect();
    const cardContentRect = this.cardContentEl.getBoundingClientRect();
    const expandedContentHeight = this.expandedContentEl.offsetHeight;
    const fromHeight = cardContentRect.height;
    debugger;
    const toHeight = fromHeight - expandedContentHeight;
    const promises = [
      anime({
        targets: this.cardContentEl,
        height: [fromHeight, toHeight],
        translateX: [cardContentRect.left, placeholderRect.left],
        translateY: [cardContentRect.top, placeholderRect.top],
        width: [cardContentRect.width, placeholderRect.width],
        boxShadow: "0 2px 2px 1px rgba(0, 0, 0, 0.1)",
        duration: leaveDuration,
        delay: 0,
        easing: 'easeInQuad'
      }).finished,
      anime({
        targets: this.expandedContentEl,
        translateY: [0, 16],
        opacity: [1, 0],
        duration: leaveDuration,
        easing: 'easeInQuad'
      }).finished,
      anime({
        targets: this.backdropEl,
        opacity: [0.33, 0],
        duration: leaveDuration,
        easing: 'easeInQuad'
      })
    ];
    return Promise.all(promises).then(() => {
      this.animating = false;
      this.expanded = false;

      this.placeholderEl.style.height = '0px';
      this.cardContentEl.style.position = "relative";
      this.cardContentEl.style.zIndex = null;
      this.cardContentEl.style.top = null;
      this.cardContentEl.style.left = null;
      this.cardContentEl.style.width = null;
      this.cardContentEl.style.height = null;
      this.cardContentEl.style.transform = null;
      this.expandedContentEl.style.visibility = "hidden";
      document.body.removeChild(this.backdropEl);
    });
  }

  staticHeight(node) {
    const height = node.offsetHeight;
    node.style.height = `${height}px`;
    return height;
  }
}

var c = new ExpandableCard(document.querySelector("#profile-1"));
var c = new ExpandableCard(document.querySelector("#profile-2"));
var c = new ExpandableCard(document.querySelector("#profile-3"));
var c = new ExpandableCard(document.querySelector("#profile-4"));


document.querySelectorAll('.mock-content').forEach(c => {
  const lines = Math.floor(Math.random() * 6) + 2;
  for(var i = 0; i < lines; i++) {
    const w = (Math.random() * 2 ) + 3
    const el = document.createElement('div');
    el.className="mock-content-line";
    el.style.width = `${w * 20}%`;
    c.appendChild(el);
  }
})
